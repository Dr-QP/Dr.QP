name: Docker build and push action
description: Build and push docker image
inputs:
  context:
    description: Context for Dockerfile build
    required: true
  file:
    description: Dockerfile to use
    required: true
  image:
    description: Image names to pass to metadata-action
    required: true
  arch:
    description: Architecture to use as suffix
    required: true
  registry:
    description: Docker registry to push to
    required: true
  registry-username:
    description: Docker registry username
    required: true
  registry-token:
    description: GitHub token
    required: true
  build-args:
    description: Build arguments for Dockerfile
    required: false
outputs:
  image:
    description: Docker tag for the images
    value: ${{ steps.meta.outputs.tag }}
runs:
  using: composite
  steps:
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-token }}

    - name: Extract metadata (labels) for docker image
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.image }}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v6
      env:
        REGISTRY_CACHE: type=registry,ref=${{ inputs.image }}:cache-${{ inputs.arch }}
        GHA_CACHE: type=gha,scope=${{ inputs.image }}-${{ inputs.arch }}
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        push: false
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: ${{ env.ACT != '' && env.REGISTRY_CACHE || env.GHA_CACHE }}
        cache-to: ${{ env.ACT != '' && env.REGISTRY_CACHE || env.GHA_CACHE }},mode=max
        build-args: ${{ inputs.build-args }}
        outputs: type=image,"name=${{ inputs.image }}",push-by-digest=true,name-canonical=true,push=true

    - name: Export digest
      shell: bash
      run: |
        mkdir -p ${{ runner.temp }}/digests
        digest="${{ steps.build.outputs.digest }}"
        touch "${{ runner.temp }}/digests/${digest#sha256:}"

    - name: Prepare
      shell: bash
      run: |
        platform='linux/${{ inputs.arch }}'
        echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

    - name: Upload digest
      uses: actions/upload-artifact@v4
      with:
        name: digests-${{ env.PLATFORM_PAIR }}
        path: ${{ runner.temp }}/digests/*
        if-no-files-found: error
        retention-days: 1
