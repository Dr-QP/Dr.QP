name: ci

on:
  release:
    types:
      - published
  push:
    branches:
      - 'develop'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'develop'
      - 'v*'

env:
  ROS_DISTRO: humble
  # CC: clang # TODO: uncomment this line when clang is available in the image
  # CXX: clang++
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor == 'nektos/act' && 'anton-matosov' || github.actor }}
  # CACHE_FROM: ${{ github.actor == 'nektos/act' && 'type=local,src=./docker-cache' || 'type=gha' }}
  # CACHE_TO: ${{ github.actor == 'nektos/act' && 'type=local,dest=./docker-cache' || 'type=gha,mode=max' }}
  CACHE_FROM: 'type=gha'
  CACHE_TO: 'type=gha,mode=max'

jobs:
  build-image:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    # permissions:
    #   contents: read
    #   packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: arm64

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images:
            ${{ env.REGISTRY }}/dr-qp/ros-desktop

      - uses: actions/checkout@v4 # Checkout the repository to allow work with nektos/act on non pushed commits
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: scripts
          file: scripts/ros-desktop.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: ${{ env.CACHE_FROM }}
          cache-to: ${{ env.CACHE_TO }}

  ros-ci:
    runs-on: ubuntu-latest
    needs: [build-image]
    container:
      # image: ros:humble-ros-base # base image is good for testing deployment packages. keep it here as an example
      # Use desktop image as there is gazebo which is a desktop package that has tons of dependencies
      # image: osrf/ros:humble-desktop

      image: ${{ needs.build-image.outputs.image }}
      credentials:
        username: ${{ env.REGISTRY_USERNAME }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - run: sudo apt-get update && sudo apt-get install -y python3-colcon-coveragepy-result
      - uses: actions/checkout@v4
      - uses: ros-tooling/action-ros-ci@v0.3
        with:
          target-ros2-distro: humble

