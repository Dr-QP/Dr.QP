name: CI/CD

on:
  release:
    types:
      - published
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
      - v*
  merge_group:
    types:
      - checks_requested

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  ROS_DISTRO: jazzy
  CC: clang
  CXX: clang++
  REGISTRY: ghcr.io
  REGISTRY_USERNAME: ${{ github.actor }} # for nektos/act, use your own username via --actor option

jobs:
  paths-filter:
    name: Paths filter
    runs-on: ${{ vars.AMD_ONLY == '1' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    outputs:
      pass: ${{ steps.filter.outputs.pass }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Filters
        uses: ./.github/actions/paths-filter
        id: filter
        with:
          extra-filter: .github/workflows/ci.yml

  build-dev-image:
    name: Development image
    timeout-minutes: 35
    needs: paths-filter
    if: needs.paths-filter.outputs.pass == 'true'
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: ${{ vars.AMD_ONLY == '1' && 'amd64' || 'arm64' }}
          - arch: ${{ vars.ARM_ONLY == '1' && 'arm64' || 'amd64' }}
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    steps:
      - uses: actions/checkout@v4

      - name: Build development docker image
        id: build
        uses: ./.github/actions/docker/build-push-action
        with:
          context: scripts
          file: scripts/ros-desktop.dockerfile
          image: ${{ env.REGISTRY }}/dr-qp/${{ env.ROS_DISTRO }}-ros-desktop
          arch: ${{ matrix.arch }}
          registry: ${{ env.REGISTRY }}
          registry-username: ${{ env.REGISTRY_USERNAME }}
          registry-token: ${{ secrets.GITHUB_TOKEN }}
          build-args: |
            ROS_DISTRO=${{ env.ROS_DISTRO }}

  merge-dev-image:
    name: Merge development image
    runs-on: ${{ vars.AMD_ONLY == '1' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions:
      packages: write
    needs:
      - build-dev-image
    timeout-minutes: 35
    outputs:
      image: ${{ steps.merge.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Merge and push development docker image
        id: merge
        uses: ./.github/actions/docker/multiarch-merge
        with:
          image: ${{ env.REGISTRY }}/dr-qp/${{ env.ROS_DISTRO }}-ros-desktop
          registry: ${{ env.REGISTRY }}
          registry-username: ${{ env.REGISTRY_USERNAME }}
          registry-token: ${{ secrets.GITHUB_TOKEN }}

  ros-ci:
    name: Build and test ROS2 workspace
    needs: [merge-dev-image]
    timeout-minutes: 35
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: ${{ vars.AMD_ONLY == '1' && 'amd64' || 'arm64' }}
          - arch: ${{ vars.ARM_ONLY == '1' && 'arm64' || 'amd64' }}
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions:
      packages: read
    container:
      image: ${{ needs.merge-dev-image.outputs.image }}
      options: --user rosdev # Mandatory! Sets user:group matching the one of the runner, allowing access to mounted paths
    steps:
      - uses: actions/checkout@v4
      - uses: ros-tooling/action-ros-ci@v0.4
        env:
          GCOV_COMMAND: "${{ github.workspace }}/scripts/gcov"
        with:
          target-ros2-distro: ${{ env.ROS_DISTRO }}
          no-symlink-install: true
          colcon-defaults: |
            {
              "build": {
                "mixin": ["coverage-gcc", "coverage-pytest"]
              },
              "test": {
                "mixin": ["coverage-pytest"]
              }
            }
          # pin the repository in the workflow to a specific commit to avoid
          # changes in colcon-mixin-repository from breaking your tests.
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/b8436aa16c0bdbc01081b12caa253cbf16e0fb82/index.yaml

      - name: Troubleshoot
        if: failure()
        shell: bash
        run: |
          set -x
          set +e
          ls -al ${{ github.workspace }}
          ls -al .
          ls -al ros_ws
          ls -al ros_ws/src
          cat package.repo
          vcs import --force --recursive src/ < package.repo

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        if: env.ACT == ''
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests-${{ matrix.arch }}
          name: codecov-umbrella

      - uses: actions/upload-artifact@v4
        # upload the logs even when the build fails
        if: always()
        with:
          name: colcon-logs-${{ matrix.arch }}
          path: ros_ws/log
          retention-days: 100

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "ros_ws/build/*/test_results/*/*.xunit.xml"
        if: always()

  build-deploy-image:
    name: Deployment image
    needs: [merge-dev-image, ros-ci]
    timeout-minutes: 35
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: ${{ vars.AMD_ONLY == '1' && 'amd64' || 'arm64' }}
          - arch: ${{ vars.ARM_ONLY == '1' && 'arm64' || 'amd64' }}
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Build deployment docker image
        uses: ./.github/actions/docker/build-push-action
        with:
          context: scripts/deploy
          file: scripts/deploy/ros-deploy.dockerfile
          image: ${{ env.REGISTRY }}/dr-qp/${{ env.ROS_DISTRO }}-ros-deploy
          arch: ${{ matrix.arch }}
          registry: ${{ env.REGISTRY }}
          registry-username: ${{ env.REGISTRY_USERNAME }}
          registry-token: ${{ secrets.GITHUB_TOKEN }}
          build-args: |
            ROS_DISTRO=${{ env.ROS_DISTRO }}
            GIT_SHA=${{ github.event.pull_request && github.event.pull_request.head.sha || github.sha }}
            BUILD_IMAGE=${{ needs.merge-dev-image.outputs.image }}

  merge-deploy-image:
    name: Merge deployment image
    runs-on: ${{ vars.AMD_ONLY == '1' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions:
      packages: write
    needs:
      - build-deploy-image
    timeout-minutes: 35
    outputs:
      image: ${{ steps.merge.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Merge and push deployment docker image
        id: merge
        uses: ./.github/actions/docker/multiarch-merge
        with:
          image: ${{ env.REGISTRY }}/dr-qp/${{ env.ROS_DISTRO }}-ros-deploy
          registry: ${{ env.REGISTRY }}
          registry-username: ${{ env.REGISTRY_USERNAME }}
          registry-token: ${{ secrets.GITHUB_TOKEN }}
  merge-all:
    name: CI/CD finished
    needs: [merge-dev-image, ros-ci, merge-deploy-image]
    runs-on: ${{ vars.AMD_ONLY == '1' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    permissions: {}
    if: ${{ cancelled() || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'failure') }}
    steps:
      - run: |
          echo "Some workflows have failed!"
          exit 1
