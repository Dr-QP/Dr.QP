---
# ROS dependencies installation

# Always include the variables file (contains known ROS dependencies)
- name: Include known ROS dependencies
  ansible.builtin.include_vars:
    file: "{{ role_path }}/vars/known_ros_dependencies.yml"

- name: Set ros_packages variable for backward compatibility
  ansible.builtin.set_fact:
    ros_packages: "{{ ros_dependencies_known_packages }}"

- name: Update APT cache
  ansible.builtin.apt:
    update_cache: true

- name: Check which ROS packages are available
  ansible.builtin.command: apt-cache policy "{{ item }}"
  register: package_policies
  changed_when: false
  failed_when: false
  loop: "{{ ros_dependencies_known_packages }}"

- name: Determine available packages
  ansible.builtin.set_fact:
    available_packages_list: "{{ available_packages_list | default([]) + [item.item] }}"
  loop: "{{ package_policies.results }}"
  when: item.stdout is search('Candidate:')

- name: List available packages
  ansible.builtin.debug:
    msg: "Available packages: {{ available_packages_list | default([]) }}"

- name: Install available ROS packages
  ansible.builtin.apt:
    name: "{{ available_packages_list }}"
    state: present
    install_recommends: false
  when: available_packages_list | default([]) | length > 0
